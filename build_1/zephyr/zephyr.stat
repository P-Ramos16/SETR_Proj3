ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0xb05
  Start of program headers:          52 (bytes into file)
  Start of section headers:          955372 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         5
  Size of section headers:           40 (bytes)
  Number of section headers:         29
  Section header string table index: 28

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 0000e0 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 0001e0 005994 00  AX  0   0  4
  [ 3] initlevel         PROGBITS        00005a94 005b74 000068 00   A  0   0  4
  [ 4] device_area       PROGBITS        00005afc 005bdc 000064 00   A  0   0  4
  [ 5] sw_isr_table      PROGBITS        00005b60 005c40 000180 00  WA  0   0  4
  [ 6] _static_thre[...] PROGBITS        00005ce0 005dc0 000030 00  WA  0   0  8
  [ 7] tbss              NOBITS          00005d10 005df0 000004 00 WAT  0   0  4
  [ 8] rodata            PROGBITS        00005d10 005df0 0003bc 00   A  0   0 16
  [ 9] .ramfunc          PROGBITS        20000000 006374 000000 00   W  0   0  1
  [10] datas             PROGBITS        20000000 0061ac 000168 00  WA  0   0  4
  [11] device_states     PROGBITS        20000168 006314 00000a 00  WA  0   0  1
  [12] k_mutex_area      PROGBITS        20000174 006320 000050 00  WA  0   0  4
  [13] bss               NOBITS          200001c8 006388 000ed9 00  WA  0   0  8
  [14] noinit            NOBITS          200010c0 006388 001240 00  WA  0   0 64
  [15] .comment          PROGBITS        00000000 006374 000040 01  MS  0   0  1
  [16] .debug_aranges    PROGBITS        00000000 0063b8 001780 00      0   0  8
  [17] .debug_info       PROGBITS        00000000 007b38 07209b 00      0   0  1
  [18] .debug_abbrev     PROGBITS        00000000 079bd3 00d055 00      0   0  1
  [19] .debug_line       PROGBITS        00000000 086c28 0201e6 00      0   0  1
  [20] .debug_frame      PROGBITS        00000000 0a6e10 003590 00      0   0  4
  [21] .debug_str        PROGBITS        00000000 0aa3a0 00ca49 01  MS  0   0  1
  [22] .debug_loc        PROGBITS        00000000 0b6de9 01f533 00      0   0  1
  [23] .debug_ranges     PROGBITS        00000000 0d6320 005498 00      0   0  8
  [24] .ARM.attributes   ARM_ATTRIBUTES  00000000 0db7b8 000032 00      0   0  1
  [25] .last_section     PROGBITS        00006290 006370 000004 00   A  0   0  1
  [26] .symtab           SYMTAB          00000000 0db7ec 007720 10     27 1063  4
  [27] .strtab           STRTAB          00000000 0e2f0c 0063b0 00      0   0  1
  [28] .shstrtab         STRTAB          00000000 0e92bc 000130 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x0000e0 0x00000000 0x00000000 0x060cc 0x060cc RWE 0x10
  LOAD           0x0061ac 0x20000000 0x000060cc 0x001c4 0x001c4 RW  0x4
  LOAD           0x006370 0x00006290 0x00006290 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x200001c8 0x200001c8 0x00000 0x02138 RW  0x40
  TLS            0x005df0 0x00005d10 0x00005d10 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     rom_start text initlevel device_area sw_isr_table _static_thread_data_area rodata 
   01     datas device_states k_mutex_area 
   02     .last_section 
   03     bss noinit 
   04     tbss 
